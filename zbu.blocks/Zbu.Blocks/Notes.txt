Install-Package Newtonsoft.Json -Version 4.5.11
=> use the same version Umbraco 6.2 uses


STATUS
- block types are working, must be configured via code
- fragments are working

TODO

- AJAX & MOBILE
	structures support contexts
	controller should set contexts? ie for AJAX? that should be a local thing really...
	  => controller should be overridable

- do we want partial structures on children (what is this)?

- What's in a block
    find a way to indicate that a block's sub-blocks are columns
	via a block.layout field?

	do we want to restrict the list of block name/source/whatever that can appear under a given block?
	do we need block types to handle all this?


CONFIGURE

public class App : ApplicationEventHandler
{
	protected override void ApplicationStarting(UmbracoApplicationBase umbracoApplication, ApplicationContext applicationContext)
	{
		base.ApplicationStarting(umbracoApplication, applicationContext);

		// register the blocks controller
		BlocksController.Register();

		PublishedContentRequest.Prepared += (sender, args) =>
		{
			// make sure the request has a published content
			var pr = sender as PublishedContentRequest;
			if (pr == null || !pr.HasPublishedContent) return;

			// make sure this is the proper website etc
			// and we have proper structures definition
			var sitekey = pr.PublishedContent.GetPropertyValue<string>("sitekey", true);
			if (sitekey != "corporate") return;
			if (!pr.PublishedContent.HasProperty("structures")) return;

			// plug Zbu.Blocks
			// a) reset template to route to MVC
			// b) tell the blocks controller that it needs to handle the request
			pr.ResetTemplate();
			BlocksController.HandleThisRequest();
		};
	}
}


RENDERING

@inherits Umbraco.Web.Mvc.UmbracoViewPage<BlockModel>
@using Zbu.Blocks
@{
    Layout = null;
}
<div style="border:1px solid blue;padding:4px;">
<div>StructureTest.cshtml</div>
<div>@Model.Content.Name</div>
@foreach (var b in Model.Block.Blocks)
{
	 @Html.Block(b);
}
</div>

@inherits Umbraco.Web.Mvc.UmbracoViewPage<BlockModel>
@using Zbu.Blocks
<div style="border:1px solid green;padding:4px;">
<div>BlockTest.cshtml</div>
<div>@Model.Content.Name</div>
<div>@Model.Block.Data["Number"]</div>
</div>

<div>@Html.Block(Model.Block.Blocks["foo"])</div>
<img src="@Model.Block.Fragment.Image.Urls.CropResized(100, 100)" />